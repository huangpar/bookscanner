{"ast":null,"code":"var _jsxFileName = \"/Users/parkerhuang/Desktop/projects/bookscanner/src/App.js\",\n  _s = $RefreshSig$();\nimport { BrowserMultiFormatReader } from '@zxing/browser';\nimport { useEffect, useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const videoRef = useRef(null);\n  const controlsRef = useRef(null);\n  const [barcode, setBarcode] = useState(null);\n  const [scanning, setScanning] = useState(true);\n  const [bookInfo, setBookInfo] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [processing, setProcessing] = useState(false);\n  const handleDetected = useCallback(async result => {\n    console.log(\"Detected barcode result:\", result);\n    console.log(\"Detected varcode:\", result);\n    if (processing) return;\n    setProcessing(true);\n    if (codeResult) {\n      //     const code = codeResult.code;\n      //     console.log('Barcode detected:', code, 'Format:', codeResult.format);\n\n      //     // Check if the detected format is EAN-13 or EAN-8\n      //     if (codeResult.format !== 'ean_13' && codeResult.format !== 'ean_8') {\n      //       console.warn('Detected barcode is not EAN-13 or EAN-8:', codeResult.format);\n      //       return;\n      //     }\n\n      //     // Validate ISBN-13\n      //     if (codeResult.format === 'ean_13' && !isValidISBN13(code)) {\n      //       console.warn('Invalid ISBN-13 detected:', code);\n      //       setError('Scanned barcode is not a valid ISBN-13.');\n      //       return;\n      //     }\n\n      //     setBarcode(code);\n      //     setScanning(false);\n      //     Quagga.stop();\n      //     setLoading(true);\n      try {\n        const response = await fetch(`https://www.googleapis.com/books/v1/volumes?q=isbn:${code}`);\n        if (!response.ok) {\n          throw new Error('Network response not ok');\n        }\n        const data = await response.json();\n        if (data.totalItems > 0) {\n          const book = data.items[0].volumeInfo;\n          setBookInfo(book);\n          console.log(book);\n        } else {\n          setError('No book found for the scanned barcode.');\n        }\n      } catch (err) {\n        console.error('Error fetching book data:', err);\n        setError('Failed to fetch book information. Please try again.');\n      } finally {\n        setLoading(false);\n        setProcessing(false);\n      }\n    }\n  }, [processing]);\n  useEffect(() => {\n    const codeReader = new BrowserMultiFormatReader();\n    const startScanner = () => {\n      if (!videoRef.current) return;\n      codeReader.decodeFromVideoDevice(null, videoRef.current, (result, err, controls) => {\n        if (!controlsRef.current) {\n          controlsRef.current = controls;\n        }\n        if (result) {\n          console.log(\"Scanned result:\", result.getText());\n          setBarcode(result);\n        }\n        if (err && err.name !== 'NotFoundException') {\n          console.err(\"Scan error:\", err);\n        }\n      });\n    };\n    requestAnimationFrame(startScanner);\n    return () => {\n      if (controlsRef.current) {\n        controlsRef.current.stop(); // Stop the scanner on unmount\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true,\n      muted: true,\n      playsInline: true,\n      style: {\n        width: '100%',\n        objectFit: 'cover',\n        backgroundColor: 'black'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"h3NNzW15J0bDEYz9fA73o9hvFZM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserMultiFormatReader","useEffect","useRef","jsxDEV","_jsxDEV","App","_s","videoRef","controlsRef","barcode","setBarcode","useState","scanning","setScanning","bookInfo","setBookInfo","loading","setLoading","processing","setProcessing","handleDetected","useCallback","result","console","log","codeResult","response","fetch","code","ok","Error","data","json","totalItems","book","items","volumeInfo","setError","err","error","codeReader","startScanner","current","decodeFromVideoDevice","controls","getText","name","requestAnimationFrame","stop","children","ref","autoPlay","muted","playsInline","style","width","objectFit","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/parkerhuang/Desktop/projects/bookscanner/src/App.js"],"sourcesContent":["import  { BrowserMultiFormatReader }  from '@zxing/browser';\nimport { useEffect, useRef} from 'react';\nimport './App.css';\n\nfunction App() {\n  const videoRef = useRef(null);\n  const controlsRef = useRef(null);\n  const [barcode, setBarcode] = useState(null);\n  const [scanning, setScanning] = useState(true);\n  const [bookInfo, setBookInfo] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [processing, setProcessing] = useState(false);\n\n  const handleDetected = useCallback(async (result) => {\n    console.log(\"Detected barcode result:\", result);\n    console.log(\"Detected varcode:\", result);\n    if (processing) return;\n    setProcessing(true);\n    if (codeResult) {\n      //     const code = codeResult.code;\n      //     console.log('Barcode detected:', code, 'Format:', codeResult.format);\n      \n      //     // Check if the detected format is EAN-13 or EAN-8\n      //     if (codeResult.format !== 'ean_13' && codeResult.format !== 'ean_8') {\n      //       console.warn('Detected barcode is not EAN-13 or EAN-8:', codeResult.format);\n      //       return;\n      //     }\n      \n      //     // Validate ISBN-13\n      //     if (codeResult.format === 'ean_13' && !isValidISBN13(code)) {\n      //       console.warn('Invalid ISBN-13 detected:', code);\n      //       setError('Scanned barcode is not a valid ISBN-13.');\n      //       return;\n      //     }\n          \n      //     setBarcode(code);\n      //     setScanning(false);\n      //     Quagga.stop();\n      //     setLoading(true);\n    try {\n      const response = await fetch(`https://www.googleapis.com/books/v1/volumes?q=isbn:${code}`);\n      if (!response.ok) {\n        throw new Error('Network response not ok');\n      }\n      const data = await response.json();\n      if (data.totalItems > 0) {\n        const book = data.items[0].volumeInfo;\n        setBookInfo(book);\n        console.log(book)\n      } else {\n        setError('No book found for the scanned barcode.');\n      }\n    } catch (err) {\n      console.error('Error fetching book data:', err);\n      setError('Failed to fetch book information. Please try again.');\n    } finally {\n      setLoading(false);\n      setProcessing(false);\n    }\n  }}, [processing]);\n\n  useEffect(() => {\n    const codeReader = new BrowserMultiFormatReader();\n    const startScanner = () => {\n      if (!videoRef.current) return;\n\n      codeReader.decodeFromVideoDevice(null, videoRef.current, (result, err, controls) => {\n          if (!controlsRef.current) {\n            controlsRef.current = controls; \n          }\n\n          if (result) {\n            console.log(\"Scanned result:\", result.getText());\n            setBarcode(result)\n          }\n\n          if (err && err.name !== 'NotFoundException') {\n            console.err(\"Scan error:\", err);\n            }\n          }\n        );\n      };\n    \n    requestAnimationFrame(startScanner);\n\n    \n\n    return () => {\n      if (controlsRef.current) {\n      controlsRef.current.stop(); // Stop the scanner on unmount\n      }\n    };\n  }, []);\n\n  return (\n    <div>\n      <video\n        ref={videoRef}\n        autoPlay\n        muted\n        playsInline\n        style={{ width: '100%', objectFit: 'cover', backgroundColor: 'black' }}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}