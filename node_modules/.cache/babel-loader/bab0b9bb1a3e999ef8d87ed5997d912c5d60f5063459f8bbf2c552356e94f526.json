{"ast":null,"code":"var _jsxFileName = \"/Users/parkerhuang/Desktop/projects/bookscanner/src/App.js\",\n  _s = $RefreshSig$();\nimport { BrowserMultiFormatReader } from '@zxing/browser';\nimport { useEffect, useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const videoRef = useRef(null);\n  const controlsRef = useRef(null);\n  const [barcode, setBarcode] = useState(null);\n  const [scanning, setScanning] = useState(true);\n  const [bookInfo, setBookInfo] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [processing, setProcessing] = useState(false);\n  useEffect(() => {\n    const codeReader = new BrowserMultiFormatReader();\n    const startScanner = () => {\n      if (!videoRef.current) return;\n      codeReader.decodeFromVideoDevice(null, videoRef.current, (result, err, controls) => {\n        if (!controlsRef.current) {\n          controlsRef.current = controls;\n        }\n        if (result) {\n          console.log(\"Scanned result:\", result.getText());\n          const isbn = result.getText();\n          fetch(`https://www.googleapis.com/books/v1/volumes?q=isbn:${isbn}`).then(res => res.json()).then(data => {\n            if (data.totalItems > 0) {\n              console.log(\"📚 Book Info:\", data.items[0].volumeInfo);\n            } else {\n              console.log(\"❌ No book found for ISBN:\", isbn);\n            }\n          }).catch(err => {\n            console.error(\"🔴 Error fetching from Google Books API:\", err);\n          });\n        }\n        if (err && err.name !== 'NotFoundException') {\n          console.err(\"Scan error:\", err);\n        }\n      });\n    };\n    requestAnimationFrame(startScanner);\n    return () => {\n      if (controlsRef.current) {\n        controlsRef.current.stop(); // Stop the scanner on unmount\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true,\n      muted: true,\n      playsInline: true,\n      style: {\n        width: '100%',\n        objectFit: 'cover',\n        backgroundColor: 'black'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"eeJLkI8M1XKWvY4feKEjzlY+hzU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserMultiFormatReader","useEffect","useRef","jsxDEV","_jsxDEV","App","_s","videoRef","controlsRef","barcode","setBarcode","useState","scanning","setScanning","bookInfo","setBookInfo","loading","setLoading","processing","setProcessing","codeReader","startScanner","current","decodeFromVideoDevice","result","err","controls","console","log","getText","isbn","fetch","then","res","json","data","totalItems","items","volumeInfo","catch","error","name","requestAnimationFrame","stop","children","ref","autoPlay","muted","playsInline","style","width","objectFit","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/parkerhuang/Desktop/projects/bookscanner/src/App.js"],"sourcesContent":["import  { BrowserMultiFormatReader }  from '@zxing/browser';\nimport { useEffect, useRef} from 'react';\nimport './App.css';\n\nfunction App() {\n  const videoRef = useRef(null);\n  const controlsRef = useRef(null);\n  const [barcode, setBarcode] = useState(null);\n  const [scanning, setScanning] = useState(true);\n  const [bookInfo, setBookInfo] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [processing, setProcessing] = useState(false);\n\n  useEffect(() => {\n    const codeReader = new BrowserMultiFormatReader();\n    const startScanner = () => {\n      if (!videoRef.current) return;\n\n      codeReader.decodeFromVideoDevice(null, videoRef.current, (result, err, controls) => {\n          if (!controlsRef.current) {\n            controlsRef.current = controls; \n          }\n\n          if (result) {\n            console.log(\"Scanned result:\", result.getText());\n            const isbn = result.getText();\n\n            fetch(`https://www.googleapis.com/books/v1/volumes?q=isbn:${isbn}`)\n              .then((res) => res.json())\n              .then((data) => {\n                if (data.totalItems > 0) {\n                  console.log(\"📚 Book Info:\", data.items[0].volumeInfo);\n                } else {\n                  console.log(\"❌ No book found for ISBN:\", isbn);\n                }\n              })\n    .catch((err) => {\n      console.error(\"🔴 Error fetching from Google Books API:\", err);\n    });\n          }\n\n          if (err && err.name !== 'NotFoundException') {\n            console.err(\"Scan error:\", err);\n            }\n          }\n        );\n      };\n    \n    requestAnimationFrame(startScanner);\n\n    \n\n    return () => {\n      if (controlsRef.current) {\n      controlsRef.current.stop(); // Stop the scanner on unmount\n      }\n    };\n  }, []);\n\n  return (\n    <div>\n      <video\n        ref={videoRef}\n        autoPlay\n        muted\n        playsInline\n        style={{ width: '100%', objectFit: 'cover', backgroundColor: 'black' }}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}