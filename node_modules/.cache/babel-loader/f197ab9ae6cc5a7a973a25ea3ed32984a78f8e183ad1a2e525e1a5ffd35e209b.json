{"ast":null,"code":"var _jsxFileName = \"/Users/parkerhuang/Desktop/projects/bookscanner/src/App.js\",\n  _s = $RefreshSig$();\nimport { BrowserMultiFormatReader } from '@zxing/browser';\nimport { useEffect, useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const videoRef = useRef(null);\n  const codeReader = useRef(null);\n  useEffect(() => {\n    codeReader.current = new BrowserMultiFormatReader();\n    codeReader.current.decodeFromVideoDevice(null, videoRef.current, (result, err, controls) => {\n      if (result) {\n        console.log(\"Scanned result:\", result.getText());\n      }\n      if (err && err.name !== 'NotFoundException') {\n        console.err(\"Scan error:\", err);\n      }\n    });\n\n    // return () => {\n    //   codeReader.current.reset(); // Stop the scanner on unmount\n    // };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true,\n      muted: true,\n      playsInline: true,\n      style: {\n        width: '100%',\n        objectFit: 'cover',\n        backgroundColor: 'black'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"NLUpHzuoXKIpgVsVGcmpqnCd9k4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserMultiFormatReader","useEffect","useRef","jsxDEV","_jsxDEV","App","_s","videoRef","codeReader","current","decodeFromVideoDevice","result","err","controls","console","log","getText","name","children","ref","autoPlay","muted","playsInline","style","width","objectFit","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/parkerhuang/Desktop/projects/bookscanner/src/App.js"],"sourcesContent":["import  { BrowserMultiFormatReader }  from '@zxing/browser';\nimport { useEffect, useRef} from 'react';\nimport './App.css';\n\nfunction App() {\n  const videoRef = useRef(null);\n  const codeReader = useRef(null);\n\n  useEffect(() => {\n    codeReader.current = new BrowserMultiFormatReader();\n\n    codeReader.current.decodeFromVideoDevice(null, videoRef.current, (result, err, controls) => {\n        if (result) {\n          console.log(\"Scanned result:\", result.getText());\n        }\n\n        if (err && err.name !== 'NotFoundException') {\n          console.err(\"Scan error:\", err);\n        }\n      });\n\n    // return () => {\n    //   codeReader.current.reset(); // Stop the scanner on unmount\n    // };\n  }, []);\n\n  return (\n    <div>\n      <video\n        ref={videoRef}\n        autoPlay\n        muted\n        playsInline\n        style={{ width: '100%', objectFit: 'cover', backgroundColor: 'black' }}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAAUA,wBAAwB,QAAS,gBAAgB;AAC3D,SAASC,SAAS,EAAEC,MAAM,QAAO,OAAO;AACxC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,QAAQ,GAAGL,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMM,UAAU,GAAGN,MAAM,CAAC,IAAI,CAAC;EAE/BD,SAAS,CAAC,MAAM;IACdO,UAAU,CAACC,OAAO,GAAG,IAAIT,wBAAwB,CAAC,CAAC;IAEnDQ,UAAU,CAACC,OAAO,CAACC,qBAAqB,CAAC,IAAI,EAAEH,QAAQ,CAACE,OAAO,EAAE,CAACE,MAAM,EAAEC,GAAG,EAAEC,QAAQ,KAAK;MACxF,IAAIF,MAAM,EAAE;QACVG,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEJ,MAAM,CAACK,OAAO,CAAC,CAAC,CAAC;MAClD;MAEA,IAAIJ,GAAG,IAAIA,GAAG,CAACK,IAAI,KAAK,mBAAmB,EAAE;QAC3CH,OAAO,CAACF,GAAG,CAAC,aAAa,EAAEA,GAAG,CAAC;MACjC;IACF,CAAC,CAAC;;IAEJ;IACA;IACA;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA;IAAAc,QAAA,eACEd,OAAA;MACEe,GAAG,EAAEZ,QAAS;MACda,QAAQ;MACRC,KAAK;MACLC,WAAW;MACXC,KAAK,EAAE;QAAEC,KAAK,EAAE,MAAM;QAAEC,SAAS,EAAE,OAAO;QAAEC,eAAe,EAAE;MAAQ;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACxB,EAAA,CAjCQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAmCZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}